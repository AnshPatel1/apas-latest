# Generated by Django 4.1.6 on 2023-03-18 19:20

import Staff.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademiaCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('description', models.TextField(blank=True, null=True)),
                ('appraisee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_academia_collaboration_appraisee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('award_type', models.CharField(blank=True, choices=[('international', 'International'), ('national', 'National'), ('state', 'State'), ('regional', 'Regional'), ('university', 'University')], max_length=100, null=True)),
                ('awardee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_award_awardee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_mooc', models.BooleanField(default=False)),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=Staff.models.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collaboration_type', models.CharField(auto_created=True, blank=True, choices=[('industry', 'Industry Collaboration')], max_length=100, null=True)),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField(default=0)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_collaboration_faculty', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consultancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField(default=0)),
                ('consultancy_type', models.CharField(blank=True, choices=[('consultancy_edp_mdp', 'Consultancy, EDP, MDP')], max_length=100, null=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_consultancy_faculty', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('timely_invigilation', models.FloatField(blank=True, null=True)),
                ('paper_setting', models.FloatField(blank=True, null=True)),
                ('evaluation', models.FloatField(blank=True, null=True)),
                ('result_submission', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FacultyAdvisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_faculty_advisor_faculty', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FacultyValidator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaching_validated', models.BooleanField(default=False)),
                ('phd_validated', models.BooleanField(default=False)),
                ('dissertation_validated', models.BooleanField(default=False)),
                ('patents_validated', models.BooleanField(default=False)),
                ('consultancy_validated', models.BooleanField(default=False)),
                ('arranging_conferences_validated', models.BooleanField(default=False)),
                ('mentorship_validated', models.BooleanField(default=False)),
                ('attending_conferences_validated', models.BooleanField(default=False)),
                ('community_development_validated', models.BooleanField(default=False)),
                ('additional_validated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GenericMarkedParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('appraisee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_generic_marked_parameter_appraisee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MarkField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ro1', models.FloatField(default=0)),
                ('ro2', models.FloatField(default=0)),
                ('ro1_remarks', models.TextField(blank=True, null=True)),
                ('ro2_remarks', models.TextField(blank=True, null=True)),
                ('ro1_agreed', models.BooleanField(default=False)),
                ('ro2_agreed', models.BooleanField(default=False)),
                ('ro2_agrees_with_ro1', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModernMethods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flip_classes', models.TextField(blank=True, null=True)),
                ('case_study', models.TextField(blank=True, null=True)),
                ('technology_integration', models.TextField(blank=True, null=True)),
                ('design_thinking', models.TextField(blank=True, null=True)),
                ('project_based_teaching', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_modern_methods', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('paper_type', models.CharField(blank=True, choices=[('journal', 'Journal'), ('conference', 'Conference'), ('epub', 'E-Publication'), ('article', 'Article')], max_length=100, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('entity_name', models.TextField(blank=True, null=True)),
                ('quality', models.CharField(blank=True, choices=[('q1', 'Q1'), ('q2', 'Q2'), ('q3', 'Q3'), ('q4', 'Q4')], max_length=100, null=True)),
                ('isbn', models.CharField(blank=True, max_length=100, null=True)),
                ('conference_organization', models.TextField(blank=True, null=True)),
                ('conference_level', models.CharField(blank=True, choices=[('national', 'National'), ('international', 'International')], max_length=100, null=True)),
                ('is_main_author', models.BooleanField(default=False)),
                ('co_author_count', models.IntegerField(default=0)),
                ('category', models.CharField(blank=True, choices=[('scopus', 'Scopus'), ('wos', 'Web of Science'), ('other', 'Other')], max_length=100, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_paper_author', to=settings.AUTH_USER_MODEL)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_paper', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='Patent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('status', models.CharField(blank=True, choices=[('filed', 'Filed'), ('published', 'Published'), ('granted', 'Granted'), ('licensed', 'Granted & Licensed')], max_length=100, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('application_no', models.CharField(blank=True, max_length=100, null=True)),
                ('innovator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_patent_innovator', to=settings.AUTH_USER_MODEL)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_patent', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='PhDGuidance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('student_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('awarded', 'Awarded'), ('synopsis', 'Synopsis Submitted'), ('ongoing', 'Under Progress'), ('other', 'Other')], max_length=100, null=True)),
                ('scopus_publications', models.IntegerField(blank=True, null=True, verbose_name='Scopus Publications (Only for External)')),
                ('category', models.CharField(blank=True, choices=[('internal', 'Internal'), ('external', 'External')], max_length=100, null=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_phd_faculty', to=settings.AUTH_USER_MODEL)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_phd', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=2023)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('ongoing', 'Ongoing'), ('completed', 'Completed')], max_length=100, null=True)),
                ('funding_agency', models.CharField(blank=True, max_length=200, null=True)),
                ('funds_received', models.FloatField(default=0)),
                ('project_participation', models.CharField(blank=True, choices=[('pi', 'Principal Investigator'), ('copi', 'Co-Principal Investigator')], max_length=100, null=True)),
                ('project_category', models.CharField(blank=True, choices=[('A', 'Above 1 Crore'), ('B', 'Above 70 Lakhs'), ('C', 'Above 50 Lakhs'), ('D', 'Above 30 Lakhs'), ('E', 'Above 15 Lakhs'), ('F', 'Above 5 Lakhs'), ('G', 'Above 3 Lakhs'), ('H', 'Above 50 Thousand'), ('INS', 'Institutional'), ('OSRP', 'OSRP Student Research Project')], max_length=100, null=True)),
                ('innovator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_project_innovator', to=settings.AUTH_USER_MODEL)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_project', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('type', models.CharField(blank=True, choices=[('book', 'Book'), ('book_chapter', 'Book Chapter'), ('edited_book_chapter', 'Edited Book Chapter')], max_length=100, null=True)),
                ('category', models.CharField(blank=True, choices=[('research', 'Research Book'), ('textbook', 'Text Book')], max_length=50, null=True)),
                ('publication_level', models.CharField(blank=True, choices=[('national', 'National'), ('international', 'International')], max_length=50, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, max_length=100, null=True)),
                ('is_main_author', models.BooleanField(default=False)),
                ('co_author_count', models.IntegerField(default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_pub_author', to=settings.AUTH_USER_MODEL)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_publication', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='ScienceGoalSheetAssistantProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('grand_total', models.IntegerField(default=348)),
                ('part_a_total', models.IntegerField(default=308)),
                ('section_1_minimum_marks', models.IntegerField(default=65)),
                ('section_1_maximum_marks', models.IntegerField(default=108)),
                ('teaching_load_upper_limit', models.IntegerField(default=16)),
                ('teaching_load_lower_limit', models.IntegerField(default=5)),
                ('teaching_load_t_coefficient', models.FloatField(default=2.6)),
                ('teaching_load_minimum_marks', models.IntegerField(default=13)),
                ('students_feedback_s_coefficient', models.FloatField(default=2.8)),
                ('students_feedback_lower_limit', models.IntegerField(default=3)),
                ('modern_methods_of_teaching_max_marks', models.IntegerField(default=15)),
                ('section_1d_max_marks', models.IntegerField(default=25)),
                ('timely_invigilation', models.IntegerField(default=5)),
                ('paper_setting', models.IntegerField(default=7)),
                ('evaluation', models.IntegerField(default=8)),
                ('result_submission', models.IntegerField(default=5)),
                ('section_1e_i_per_book_per_author', models.IntegerField(default=20)),
                ('section_1e_i_per_chapter', models.IntegerField(default=5)),
                ('section_1e_ii_per_book_per_author', models.IntegerField(default=15)),
                ('section_1e_ii_per_chapter', models.IntegerField(default=3)),
                ('section_1e_iii_per_international_book_per_author', models.IntegerField(default=15)),
                ('section_1e_iii_per_national_book_per_author', models.IntegerField(default=10)),
                ('section_1e_iii_per_chapter', models.IntegerField(default=5)),
                ('section_2_subtotal', models.IntegerField(default=130)),
                ('section_2a_subtotal', models.IntegerField(default=45)),
                ('section_2a_a_i_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_i_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_i_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_i_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_i_per_wos', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_ii_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_ii_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_ii_per_wos', models.IntegerField(default=20)),
                ('section_2a_b_per_e_publication', models.IntegerField(default=5)),
                ('section_2a_b_max_marks', models.IntegerField(default=10)),
                ('section_2a_c_category_a_per_pi', models.IntegerField(default=50)),
                ('section_2a_c_category_a_per_co_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_co_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_co_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_co_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_co_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_co_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_g_per_pi', models.IntegerField(default=8)),
                ('section_2a_c_category_g_per_co_pi', models.IntegerField(default=4)),
                ('section_2a_c_category_h_per_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_h_per_co_pi', models.IntegerField(default=3)),
                ('section_2a_c_category_institutional_projects', models.IntegerField(default=20)),
                ('section_2a_c_category_osrp_student_research_project', models.IntegerField(default=7)),
                ('section_2b_phd_guidance_awarded', models.IntegerField(default=25)),
                ('section_2b_phd_guidance_synopsis_submitted', models.IntegerField(default=15)),
                ('section_2b_phd_guidance_under_progress', models.IntegerField(default=10)),
                ('section_2b_phd_guidance_external', models.IntegerField(default=5)),
                ('section_2b_phd_guidance_external_max', models.IntegerField(default=2)),
                ('section_2c_patent_granted_and_licensed', models.IntegerField(default=50)),
                ('section_2c_patent_granted', models.IntegerField(default=25)),
                ('section_2c_patent_published', models.IntegerField(default=15)),
                ('section_2c_patent_filed', models.IntegerField(default=5)),
                ('section_2c_faculty_advisor_to_student', models.IntegerField(default=0)),
                ('section_2d_recognition_awards_received_max_marks', models.IntegerField(default=10)),
                ('section_2d_international_level', models.IntegerField(default=10)),
                ('section_2d_national_level', models.IntegerField(default=7)),
                ('section_2d_state_level', models.IntegerField(default=5)),
                ('section_2d_regional_university_level', models.IntegerField(default=2)),
                ('section_2e_academia_collaboration_max_marks', models.IntegerField(default=25)),
                ('section_2e_mou_signed', models.IntegerField(default=5)),
                ('section_2e_faculty_contribution', models.IntegerField(default=20)),
                ('section_3_subtotal', models.IntegerField(default=50)),
                ('section_3a_arranging_conferences_max_marks', models.IntegerField(default=25)),
                ('section_3b_mentor_to_students_max_marks', models.IntegerField(default=25)),
                ('section_4a_arranging_conferences_max_marks', models.IntegerField(default=20)),
                ('section_4a_arranging_conferences_marks_per_conference', models.IntegerField(default=10)),
                ('section_4b_community_development_initiatives_max_marks', models.IntegerField(default=10)),
                ('section_4c_involvement_in_extra_curricular_activities_max_marks', models.IntegerField(default=10)),
                ('part_b_total', models.IntegerField(default=40)),
                ('senior_feedback_outstanding_marks', models.IntegerField(default=15)),
                ('senior_feedback_good_marks', models.IntegerField(default=12)),
                ('senior_feedback_average_marks', models.IntegerField(default=7)),
                ('senior_feedback_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_outstanding_marks', models.IntegerField(default=10)),
                ('self_development_good_marks', models.IntegerField(default=7)),
                ('self_development_average_marks', models.IntegerField(default=5)),
                ('self_development_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_mooc_course_marks', models.IntegerField(default=15)),
                ('additional_responsibilities_outstanding_marks', models.IntegerField(default=15)),
                ('additional_responsibilities_good_marks', models.IntegerField(default=12)),
                ('additional_responsibilities_average_marks', models.IntegerField(default=7)),
                ('additional_responsibilities_unsatisfactory_marks', models.IntegerField(default=3)),
            ],
            options={
                'verbose_name': 'Goalsheet Configuration for Maths Assistant Professor',
                'verbose_name_plural': 'Goalsheet Configurations for Maths Assistant Professor',
            },
        ),
        migrations.CreateModel(
            name='ScienceGoalSheetAssistantProfOnContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('grand_total', models.IntegerField(default=315)),
                ('part_a_total', models.IntegerField(default=275)),
                ('section_1_minimum_marks', models.IntegerField(default=65)),
                ('section_1_maximum_marks', models.IntegerField(default=113)),
                ('teaching_load_upper_limit', models.IntegerField(default=16)),
                ('teaching_load_lower_limit', models.IntegerField(default=5)),
                ('teaching_load_t_coefficient', models.FloatField(default=2.6)),
                ('teaching_load_minimum_marks', models.IntegerField(default=13)),
                ('students_feedback_s_coefficient', models.FloatField(default=2.8)),
                ('students_feedback_lower_limit', models.IntegerField(default=3)),
                ('modern_methods_of_teaching_max_marks', models.IntegerField(default=15)),
                ('section_1d_max_marks', models.IntegerField(default=30)),
                ('timely_invigilation', models.IntegerField(default=5)),
                ('paper_setting', models.IntegerField(default=9)),
                ('evaluation', models.IntegerField(default=11)),
                ('result_submission', models.IntegerField(default=5)),
                ('section_1e_i_per_book_per_author', models.IntegerField(default=20)),
                ('section_1e_i_per_chapter', models.IntegerField(default=5)),
                ('section_1e_ii_per_international_book_per_author', models.IntegerField(default=15)),
                ('section_1e_ii_per_national_book_per_author', models.IntegerField(default=10)),
                ('section_1e_ii_per_chapter', models.IntegerField(default=5)),
                ('section_2_subtotal', models.IntegerField(default=97)),
                ('section_2a_subtotal', models.IntegerField(default=37)),
                ('section_2a_a_i_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_i_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_i_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_i_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_i_per_wos', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_ii_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_ii_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_ii_per_wos', models.IntegerField(default=20)),
                ('section_2a_b_per_e_publication', models.IntegerField(default=5)),
                ('section_2a_b_max_marks', models.IntegerField(default=10)),
                ('section_2a_c_category_a_per_pi', models.IntegerField(default=50)),
                ('section_2a_c_category_a_per_co_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_co_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_co_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_co_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_co_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_co_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_g_per_pi', models.IntegerField(default=8)),
                ('section_2a_c_category_g_per_co_pi', models.IntegerField(default=4)),
                ('section_2a_c_category_h_per_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_h_per_co_pi', models.IntegerField(default=3)),
                ('section_2a_c_category_institutional_projects', models.IntegerField(default=20)),
                ('section_2a_c_category_osrp_student_research_project', models.IntegerField(default=7)),
                ('section_2b_phd_guidance_awarded', models.IntegerField(default=0)),
                ('section_2b_phd_guidance_synopsis_submitted', models.IntegerField(default=0)),
                ('section_2b_phd_guidance_under_progress', models.IntegerField(default=0)),
                ('section_2b_phd_guidance_external', models.IntegerField(default=5)),
                ('section_2b_phd_guidance_external_max', models.IntegerField(default=2)),
                ('section_2c_patent_granted_and_licensed', models.IntegerField(default=50)),
                ('section_2c_patent_granted', models.IntegerField(default=25)),
                ('section_2c_patent_published', models.IntegerField(default=15)),
                ('section_2c_patent_filed', models.IntegerField(default=5)),
                ('section_2c_faculty_advisor_to_student', models.IntegerField(default=25)),
                ('section_2d_recognition_awards_received_max_marks', models.IntegerField(default=10)),
                ('section_2d_international_level', models.IntegerField(default=10)),
                ('section_2d_national_level', models.IntegerField(default=7)),
                ('section_2d_state_level', models.IntegerField(default=5)),
                ('section_2d_regional_university_level', models.IntegerField(default=2)),
                ('section_2e_academia_collaboration_max_marks', models.IntegerField(default=25)),
                ('section_2e_mou_signed', models.IntegerField(default=5)),
                ('section_2e_faculty_contribution', models.IntegerField(default=20)),
                ('section_3_subtotal', models.IntegerField(default=45)),
                ('section_3a_arranging_conferences_max_marks', models.IntegerField(default=20)),
                ('section_3b_mentor_to_students_max_marks', models.IntegerField(default=25)),
                ('section_4a_arranging_conferences_max_marks', models.IntegerField(default=20)),
                ('section_4a_arranging_conferences_marks_per_conference', models.IntegerField(default=10)),
                ('section_4b_community_development_initiatives_max_marks', models.IntegerField(default=10)),
                ('section_4c_involvement_in_extra_curricular_activities_max_marks', models.IntegerField(default=10)),
                ('part_b_total', models.IntegerField(default=40)),
                ('senior_feedback_outstanding_marks', models.IntegerField(default=15)),
                ('senior_feedback_good_marks', models.IntegerField(default=12)),
                ('senior_feedback_average_marks', models.IntegerField(default=7)),
                ('senior_feedback_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_outstanding_marks', models.IntegerField(default=10)),
                ('self_development_good_marks', models.IntegerField(default=7)),
                ('self_development_average_marks', models.IntegerField(default=5)),
                ('self_development_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_mooc_course_marks', models.IntegerField(default=15)),
                ('additional_responsibilities_outstanding_marks', models.IntegerField(default=15)),
                ('additional_responsibilities_good_marks', models.IntegerField(default=12)),
                ('additional_responsibilities_average_marks', models.IntegerField(default=7)),
                ('additional_responsibilities_unsatisfactory_marks', models.IntegerField(default=3)),
            ],
            options={
                'verbose_name': 'Goalsheet Configuration for FoET Assistant Professor On Contract',
                'verbose_name_plural': 'Goalsheet Configurations for FoET Assistant Professor On Contract',
            },
        ),
        migrations.CreateModel(
            name='ScienceGoalSheetAssociateProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('grand_total', models.IntegerField(default=342)),
                ('part_a_total', models.IntegerField(default=302)),
                ('section_1_minimum_marks', models.IntegerField(default=65)),
                ('section_1_maximum_marks', models.IntegerField(default=98)),
                ('teaching_load_upper_limit', models.IntegerField(default=14)),
                ('teaching_load_lower_limit', models.IntegerField(default=4)),
                ('teaching_load_t_coefficient', models.FloatField(default=2.6)),
                ('teaching_load_minimum_marks', models.IntegerField(default=13)),
                ('students_feedback_s_coefficient', models.FloatField(default=2.4)),
                ('students_feedback_lower_limit', models.IntegerField(default=3)),
                ('modern_methods_of_teaching_max_marks', models.IntegerField(default=15)),
                ('section_1d_max_marks', models.IntegerField(default=20)),
                ('timely_invigilation', models.IntegerField(default=5)),
                ('paper_setting', models.IntegerField(default=5)),
                ('evaluation', models.IntegerField(default=5)),
                ('result_submission', models.IntegerField(default=5)),
                ('section_1e_i_per_book_per_author', models.IntegerField(default=20)),
                ('section_1e_i_per_chapter', models.IntegerField(default=5)),
                ('section_1e_ii_per_international_book_per_author', models.IntegerField(default=15)),
                ('section_1e_ii_per_national_book_per_author', models.IntegerField(default=10)),
                ('section_1e_ii_per_chapter', models.IntegerField(default=5)),
                ('section_2_subtotal', models.IntegerField(default=130)),
                ('section_2a_subtotal', models.IntegerField(default=45)),
                ('section_2a_a_i_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_i_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_i_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_i_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_i_per_wos', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_ii_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_ii_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_ii_per_wos', models.IntegerField(default=20)),
                ('section_2a_b_per_e_publication', models.IntegerField(default=5)),
                ('section_2a_b_max_marks', models.IntegerField(default=10)),
                ('section_2a_c_category_a_per_pi', models.IntegerField(default=50)),
                ('section_2a_c_category_a_per_co_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_co_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_co_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_co_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_co_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_co_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_g_per_pi', models.IntegerField(default=8)),
                ('section_2a_c_category_g_per_co_pi', models.IntegerField(default=4)),
                ('section_2a_c_category_h_per_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_h_per_co_pi', models.IntegerField(default=3)),
                ('section_2a_c_category_institutional_projects', models.IntegerField(default=20)),
                ('section_2a_c_category_osrp_student_research_project', models.IntegerField(default=7)),
                ('section_2b_phd_guidance_awarded', models.IntegerField(default=25)),
                ('section_2b_phd_guidance_synopsis_submitted', models.IntegerField(default=15)),
                ('section_2b_phd_guidance_under_progress', models.IntegerField(default=10)),
                ('section_2b_phd_guidance_external', models.IntegerField(default=5)),
                ('section_2b_phd_guidance_external_max', models.IntegerField(default=2)),
                ('section_2c_patent_granted_and_licensed', models.IntegerField(default=50)),
                ('section_2c_patent_granted', models.IntegerField(default=25)),
                ('section_2c_patent_published', models.IntegerField(default=15)),
                ('section_2c_patent_filed', models.IntegerField(default=5)),
                ('section_2c_faculty_advisor_to_student', models.IntegerField(default=0)),
                ('section_2d_recognition_awards_received_max_marks', models.IntegerField(default=10)),
                ('section_2d_international_level', models.IntegerField(default=10)),
                ('section_2d_national_level', models.IntegerField(default=7)),
                ('section_2d_state_level', models.IntegerField(default=5)),
                ('section_2d_regional_university_level', models.IntegerField(default=2)),
                ('section_2e_academia_collaboration_max_marks', models.IntegerField(default=25)),
                ('section_2e_mou_signed', models.IntegerField(default=5)),
                ('section_2e_faculty_contribution', models.IntegerField(default=20)),
                ('section_3_subtotal', models.IntegerField(default=55)),
                ('section_3a_arranging_conferences_max_marks', models.IntegerField(default=30)),
                ('section_3b_mentor_to_students_max_marks', models.IntegerField(default=25)),
                ('section_4a_arranging_conferences_max_marks', models.IntegerField(default=20)),
                ('section_4a_arranging_conferences_marks_per_conference', models.IntegerField(default=10)),
                ('section_4b_community_development_initiatives_max_marks', models.IntegerField(default=10)),
                ('section_4c_involvement_in_extra_curricular_activities_max_marks', models.IntegerField(default=10)),
                ('part_b_total', models.IntegerField(default=40)),
                ('senior_feedback_outstanding_marks', models.IntegerField(default=10)),
                ('senior_feedback_good_marks', models.IntegerField(default=7)),
                ('senior_feedback_average_marks', models.IntegerField(default=5)),
                ('senior_feedback_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_outstanding_marks', models.IntegerField(default=10)),
                ('self_development_good_marks', models.IntegerField(default=7)),
                ('self_development_average_marks', models.IntegerField(default=5)),
                ('self_development_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_mooc_course_marks', models.IntegerField(default=15)),
                ('additional_responsibilities_outstanding_marks', models.IntegerField(default=20)),
                ('additional_responsibilities_good_marks', models.IntegerField(default=14)),
                ('additional_responsibilities_average_marks', models.IntegerField(default=10)),
                ('additional_responsibilities_unsatisfactory_marks', models.IntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Goalsheet Configuration for Maths Associate Professor',
                'verbose_name_plural': 'Goalsheet Configurations for Maths Associate Professor',
            },
        ),
        migrations.CreateModel(
            name='ScienceGoalSheetProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('grand_total', models.IntegerField(default=322)),
                ('part_a_total', models.IntegerField(default=292)),
                ('section_1_minimum_marks', models.IntegerField(default=65)),
                ('section_1_maximum_marks', models.IntegerField(default=88)),
                ('teaching_load_upper_limit', models.IntegerField(default=14)),
                ('teaching_load_lower_limit', models.IntegerField(default=4)),
                ('teaching_load_t_coefficient', models.FloatField(default=2.6)),
                ('teaching_load_minimum_marks', models.IntegerField(default=13)),
                ('students_feedback_s_coefficient', models.FloatField(default=2.4)),
                ('students_feedback_lower_limit', models.IntegerField(default=3)),
                ('modern_methods_of_teaching_max_marks', models.IntegerField(default=15)),
                ('section_1d_max_marks', models.IntegerField(default=10)),
                ('timely_invigilation', models.FloatField(default=2.5)),
                ('paper_setting', models.FloatField(default=2.5)),
                ('evaluation', models.FloatField(default=2.5)),
                ('result_submission', models.FloatField(default=2.5)),
                ('section_1e_i_per_book_per_author', models.IntegerField(default=20)),
                ('section_1e_i_per_chapter', models.IntegerField(default=5)),
                ('section_1e_ii_per_international_book_per_author', models.IntegerField(default=15)),
                ('section_1e_ii_per_national_book_per_author', models.IntegerField(default=10)),
                ('section_1e_ii_per_chapter', models.IntegerField(default=5)),
                ('section_2_subtotal', models.IntegerField(default=130)),
                ('section_2a_subtotal', models.IntegerField(default=45)),
                ('section_2a_a_i_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_i_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_i_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_i_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_i_per_wos', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q1', models.IntegerField(default=25)),
                ('section_2a_a_ii_per_scopus_q2', models.IntegerField(default=20)),
                ('section_2a_a_ii_per_scopus_q3', models.IntegerField(default=15)),
                ('section_2a_a_ii_per_scopus_q4', models.IntegerField(default=10)),
                ('section_2a_a_ii_per_wos', models.IntegerField(default=20)),
                ('section_2a_b_per_e_publication', models.IntegerField(default=5)),
                ('section_2a_b_max_marks', models.IntegerField(default=10)),
                ('section_2a_c_category_a_per_pi', models.IntegerField(default=50)),
                ('section_2a_c_category_a_per_co_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_pi', models.IntegerField(default=40)),
                ('section_2a_c_category_b_per_co_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_pi', models.IntegerField(default=30)),
                ('section_2a_c_category_c_per_co_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_pi', models.IntegerField(default=20)),
                ('section_2a_c_category_d_per_co_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_pi', models.IntegerField(default=15)),
                ('section_2a_c_category_e_per_co_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_pi', models.IntegerField(default=10)),
                ('section_2a_c_category_f_per_co_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_g_per_pi', models.IntegerField(default=8)),
                ('section_2a_c_category_g_per_co_pi', models.IntegerField(default=4)),
                ('section_2a_c_category_h_per_pi', models.IntegerField(default=5)),
                ('section_2a_c_category_h_per_co_pi', models.IntegerField(default=3)),
                ('section_2a_c_category_institutional_projects', models.IntegerField(default=20)),
                ('section_2a_c_category_osrp_student_research_project', models.IntegerField(default=7)),
                ('section_2b_phd_guidance_awarded', models.IntegerField(default=25)),
                ('section_2b_phd_guidance_synopsis_submitted', models.IntegerField(default=15)),
                ('section_2b_phd_guidance_under_progress', models.IntegerField(default=10)),
                ('section_2b_phd_guidance_external', models.IntegerField(default=5)),
                ('section_2b_phd_guidance_external_max', models.IntegerField(default=2)),
                ('section_2c_patent_granted_and_licensed', models.IntegerField(default=50)),
                ('section_2c_patent_granted', models.IntegerField(default=25)),
                ('section_2c_patent_published', models.IntegerField(default=15)),
                ('section_2c_patent_filed', models.IntegerField(default=5)),
                ('section_2c_faculty_advisor_to_student', models.IntegerField(default=0)),
                ('section_2d_recognition_awards_received_max_marks', models.IntegerField(default=10)),
                ('section_2d_international_level', models.IntegerField(default=10)),
                ('section_2d_national_level', models.IntegerField(default=7)),
                ('section_2d_state_level', models.IntegerField(default=5)),
                ('section_2d_regional_university_level', models.IntegerField(default=2)),
                ('section_2e_academia_collaboration_max_marks', models.IntegerField(default=25)),
                ('section_2e_mou_signed', models.IntegerField(default=5)),
                ('section_2e_faculty_contribution', models.IntegerField(default=20)),
                ('section_3_subtotal', models.IntegerField(default=55)),
                ('section_3a_arranging_conferences_max_marks', models.IntegerField(default=30)),
                ('section_3b_mentor_to_students_max_marks', models.IntegerField(default=25)),
                ('section_4a_arranging_conferences_max_marks', models.IntegerField(default=20)),
                ('section_4a_arranging_conferences_marks_per_conference', models.IntegerField(default=10)),
                ('section_4b_community_development_initiatives_max_marks', models.IntegerField(default=10)),
                ('section_4c_involvement_in_extra_curricular_activities_max_marks', models.IntegerField(default=10)),
                ('part_b_total', models.IntegerField(default=40)),
                ('senior_feedback_outstanding_marks', models.IntegerField(default=10)),
                ('senior_feedback_good_marks', models.IntegerField(default=7)),
                ('senior_feedback_average_marks', models.IntegerField(default=5)),
                ('senior_feedback_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_outstanding_marks', models.IntegerField(default=10)),
                ('self_development_good_marks', models.IntegerField(default=7)),
                ('self_development_average_marks', models.IntegerField(default=5)),
                ('self_development_unsatisfactory_marks', models.IntegerField(default=3)),
                ('self_development_mooc_course_marks', models.IntegerField(default=15)),
                ('additional_responsibilities_outstanding_marks', models.IntegerField(default=20)),
                ('additional_responsibilities_good_marks', models.IntegerField(default=14)),
                ('additional_responsibilities_average_marks', models.IntegerField(default=10)),
                ('additional_responsibilities_unsatisfactory_marks', models.IntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Goalsheet Configuration for Maths Professor On Contract',
                'verbose_name_plural': 'Goalsheet Configurations for Maths Professor On Contract',
            },
        ),
        migrations.CreateModel(
            name='TeachingLoad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('semester_odd', models.FloatField(default=0)),
                ('semester_even', models.FloatField(default=0)),
                ('semester_third', models.FloatField(default=0)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_teaching_load', to='FacultyScience.markfield')),
            ],
        ),
        migrations.CreateModel(
            name='ScienceProfAppraisalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_level', models.CharField(choices=[('APPRAISEE', 'APPRAISEE'), ('RO1', 'Reporting Officer (RO)'), ('RO2', 'Reviewing Officer (RV)')], default='APPRAISEE', max_length=10)),
                ('year', models.IntegerField(default=2023)),
                ('has_verified_data', models.BooleanField(default=False)),
                ('student_feedback', models.FloatField(blank=True, null=True)),
                ('external_phd_guidance_available', models.BooleanField(default=True)),
                ('arranging_conferences_available', models.BooleanField(default=True)),
                ('being_mentor_available', models.BooleanField(default=True)),
                ('attending_conferences_available', models.BooleanField(default=True)),
                ('community_development_available', models.BooleanField(default=True)),
                ('senior_feedback_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('self_development_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('is_mooc_available', models.BooleanField(default=True)),
                ('additional_responsibilities_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('academia_collaboration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_academia_collaboration', to='FacultyScience.academiacollaboration')),
                ('academia_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_academia_collaboration_total', to='FacultyScience.markfield')),
                ('additional_responsibilities_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_additional_responsibilities_marks', to='FacultyScience.markfield')),
                ('admission_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_admission_duty_total', to='FacultyScience.markfield')),
                ('arranging_conferences', models.ManyToManyField(blank=True, related_name='science_prof_arranging_conferences', to='FacultyScience.genericmarkedparameter')),
                ('arranging_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_arranging_conferences_total', to='FacultyScience.markfield')),
                ('attending_conferences', models.ManyToManyField(blank=True, related_name='science_prof_attending_conferences', to='FacultyScience.genericmarkedparameter')),
                ('attending_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_attending_conferences_total', to='FacultyScience.markfield')),
                ('being_mentor', models.ManyToManyField(blank=True, related_name='science_prof_being_mentor', to='FacultyScience.genericmarkedparameter')),
                ('being_mentor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_being_mentor_total', to='FacultyScience.markfield')),
                ('books_and_publications_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_books_and_publications_marks', to='FacultyScience.markfield')),
                ('community_development', models.ManyToManyField(blank=True, related_name='science_prof_community_development', to='FacultyScience.genericmarkedparameter')),
                ('community_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_community_development_total', to='FacultyScience.markfield')),
                ('conference_proceedings_scopus_wos', models.ManyToManyField(blank=True, related_name='science_prof_conference_proceedings_scopus_wos', to='FacultyScience.paper')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FacultyScience.sciencegoalsheetprof')),
                ('e_publications_articles', models.ManyToManyField(blank=True, related_name='science_prof_e_publications_articles', to='FacultyScience.paper')),
                ('exam_duty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_exam_duty_total_marks', to='FacultyScience.examduty')),
                ('faculty_advisor', models.ManyToManyField(blank=True, related_name='science_prof_faculty_advisor', to='FacultyScience.facultyadvisor')),
                ('faculty_advisor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_faculty_advisor_total', to='FacultyScience.markfield')),
                ('grand_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_grand_total', to='FacultyScience.markfield')),
                ('industry_collaboration', models.ManyToManyField(blank=True, related_name='science_prof_industry_collaboration', to='FacultyScience.collaboration')),
                ('industry_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_industry_collaboration_total', to='FacultyScience.markfield')),
                ('involvement_extra_curricular_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_involvement_extra_curricular_total', to='FacultyScience.markfield')),
                ('modern_teaching_methods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_modern_teaching_methods', to='FacultyScience.modernmethods')),
                ('mooc_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_mooc_course', to='FacultyScience.certification')),
                ('mooc_courses_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_mooc_courses_total', to='FacultyScience.markfield')),
                ('part_a_section_1_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_a_section_1_total', to='FacultyScience.markfield')),
                ('part_a_section_2_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_a_section_2_total', to='FacultyScience.markfield')),
                ('part_a_section_2a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_a_section_2a_total', to='FacultyScience.markfield')),
                ('part_a_section_3_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_a_section_3_total', to='FacultyScience.markfield')),
                ('part_a_section_4_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_a_section_4_total', to='FacultyScience.markfield')),
                ('part_a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_a_total', to='FacultyScience.markfield')),
                ('part_b_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_part_b_total', to='FacultyScience.markfield')),
                ('patents', models.ManyToManyField(blank=True, related_name='science_prof_patents', to='FacultyScience.patent')),
                ('patents_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_patents_total', to='FacultyScience.markfield')),
                ('phd_guidance', models.ManyToManyField(blank=True, related_name='science_prof_phd_guidance', to='FacultyScience.phdguidance')),
                ('phd_guidance_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_phd_guidance_total', to='FacultyScience.markfield')),
                ('placement_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_placement_duty_total', to='FacultyScience.markfield')),
                ('projects', models.ManyToManyField(blank=True, related_name='science_prof_projects', to='FacultyScience.project')),
                ('projects_total_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_projects_total_marks', to='FacultyScience.markfield')),
                ('providing_consultancy', models.ManyToManyField(blank=True, related_name='science_prof_providing_consultancy', to='FacultyScience.consultancy')),
                ('providing_consultancy_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_providing_consultancy_total', to='FacultyScience.markfield')),
                ('publications_in_scopus_wos', models.ManyToManyField(blank=True, related_name='science_prof_publications_in_scopus_wos', to='FacultyScience.paper')),
                ('recognition_awards', models.ManyToManyField(blank=True, related_name='science_prof_recognition_awards', to='FacultyScience.award')),
                ('recognition_awards_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_recognition_awards_total', to='FacultyScience.markfield')),
                ('research_books', models.ManyToManyField(blank=True, related_name='science_prof_research_books', to='FacultyScience.publication')),
                ('ro1_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_r1_validator', to='FacultyScience.facultyvalidator')),
                ('ro2_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_r2_validator', to='FacultyScience.facultyvalidator')),
                ('self_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_self_development_total', to='FacultyScience.markfield')),
                ('self_development_trainings', models.ManyToManyField(blank=True, related_name='science_prof_self_development_trainings', to='FacultyScience.certification')),
                ('senior_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_senior_feedback_marks', to='FacultyScience.markfield')),
                ('student_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_student_feedback_marks', to='FacultyScience.markfield')),
                ('teaching_load', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_teaching_load', to='FacultyScience.teachingload')),
                ('textbooks', models.ManyToManyField(blank=True, related_name='science_prof_textbook', to='FacultyScience.publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_prof_validator', to='FacultyScience.facultyvalidator')),
            ],
        ),
        migrations.CreateModel(
            name='ScienceAssociateProfAppraisalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_level', models.CharField(choices=[('APPRAISEE', 'APPRAISEE'), ('RO1', 'Reporting Officer (RO)'), ('RO2', 'Reviewing Officer (RV)')], default='APPRAISEE', max_length=10)),
                ('year', models.IntegerField(default=2023)),
                ('has_verified_data', models.BooleanField(default=False)),
                ('student_feedback', models.FloatField(blank=True, null=True)),
                ('external_phd_guidance_available', models.BooleanField(default=True)),
                ('arranging_conferences_available', models.BooleanField(default=True)),
                ('being_mentor_available', models.BooleanField(default=True)),
                ('attending_conferences_available', models.BooleanField(default=True)),
                ('community_development_available', models.BooleanField(default=True)),
                ('senior_feedback_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('self_development_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('is_mooc_available', models.BooleanField(default=True)),
                ('additional_responsibilities_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('academia_collaboration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_academia_collaboration', to='FacultyScience.academiacollaboration')),
                ('academia_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_academia_collaboration_total', to='FacultyScience.markfield')),
                ('additional_responsibilities_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_additional_responsibilities_marks', to='FacultyScience.markfield')),
                ('admission_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_admission_duty_total', to='FacultyScience.markfield')),
                ('arranging_conferences', models.ManyToManyField(blank=True, related_name='science_assoc_prof_arranging_conferences', to='FacultyScience.genericmarkedparameter')),
                ('arranging_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_arranging_conferences_total', to='FacultyScience.markfield')),
                ('attending_conferences', models.ManyToManyField(blank=True, related_name='science_assoc_prof_attending_conferences', to='FacultyScience.genericmarkedparameter')),
                ('attending_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_attending_conferences_total', to='FacultyScience.markfield')),
                ('being_mentor', models.ManyToManyField(blank=True, related_name='science_assoc_prof_being_mentor', to='FacultyScience.genericmarkedparameter')),
                ('being_mentor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_being_mentor_total', to='FacultyScience.markfield')),
                ('books_and_publications_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_books_and_publications_marks', to='FacultyScience.markfield')),
                ('community_development', models.ManyToManyField(blank=True, related_name='science_assoc_prof_community_development', to='FacultyScience.genericmarkedparameter')),
                ('community_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_community_development_total', to='FacultyScience.markfield')),
                ('conference_proceedings_scopus_wos', models.ManyToManyField(blank=True, related_name='science_assoc_prof_conference_proceedings_scopus_wos', to='FacultyScience.paper')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FacultyScience.sciencegoalsheetassociateprof')),
                ('e_publications_articles', models.ManyToManyField(blank=True, related_name='science_assoc_prof_e_publications_articles', to='FacultyScience.paper')),
                ('exam_duty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_exam_duty_total_marks', to='FacultyScience.examduty')),
                ('faculty_advisor', models.ManyToManyField(blank=True, related_name='science_assoc_prof_faculty_advisor', to='FacultyScience.facultyadvisor')),
                ('faculty_advisor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_faculty_advisor_total', to='FacultyScience.markfield')),
                ('grand_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_grand_total', to='FacultyScience.markfield')),
                ('industry_collaboration', models.ManyToManyField(blank=True, related_name='science_assoc_prof_industry_collaboration', to='FacultyScience.collaboration')),
                ('industry_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_industry_collaboration_total', to='FacultyScience.markfield')),
                ('involvement_extra_curricular_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_involvement_extra_curricular_total', to='FacultyScience.markfield')),
                ('modern_teaching_methods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_modern_teaching_methods', to='FacultyScience.modernmethods')),
                ('mooc_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_mooc_courses', to='FacultyScience.certification')),
                ('mooc_courses_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_mooc_courses_total', to='FacultyScience.markfield')),
                ('part_a_section_1_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_a_section_1_total', to='FacultyScience.markfield')),
                ('part_a_section_2_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_a_section_2_total', to='FacultyScience.markfield')),
                ('part_a_section_2a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_a_section_2a_total', to='FacultyScience.markfield')),
                ('part_a_section_3_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_a_section_3_total', to='FacultyScience.markfield')),
                ('part_a_section_4_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_a_section_4_total', to='FacultyScience.markfield')),
                ('part_a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_a_total', to='FacultyScience.markfield')),
                ('part_b_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_part_b_total', to='FacultyScience.markfield')),
                ('patents', models.ManyToManyField(blank=True, related_name='science_assoc_prof_patents', to='FacultyScience.patent')),
                ('patents_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_patents_total', to='FacultyScience.markfield')),
                ('phd_guidance', models.ManyToManyField(blank=True, related_name='science_assoc_prof_phd_guidance', to='FacultyScience.phdguidance')),
                ('phd_guidance_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_phd_guidance_total', to='FacultyScience.markfield')),
                ('placement_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_placement_duty_total', to='FacultyScience.markfield')),
                ('projects', models.ManyToManyField(blank=True, related_name='science_assoc_prof_projects', to='FacultyScience.project')),
                ('projects_total_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_projects_total_marks', to='FacultyScience.markfield')),
                ('providing_consultancy', models.ManyToManyField(blank=True, related_name='science_assoc_prof_providing_consultancy', to='FacultyScience.consultancy')),
                ('providing_consultancy_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_providing_consultancy_total', to='FacultyScience.markfield')),
                ('publications_in_scopus_wos', models.ManyToManyField(blank=True, related_name='science_assoc_prof_publications_in_scopus_wos', to='FacultyScience.paper')),
                ('recognition_awards', models.ManyToManyField(blank=True, related_name='science_assoc_prof_recognition_awards', to='FacultyScience.award')),
                ('recognition_awards_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_recognition_awards_total', to='FacultyScience.markfield')),
                ('research_books', models.ManyToManyField(blank=True, related_name='science_assoc_prof_research_books', to='FacultyScience.publication')),
                ('ro1_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_r1_validator', to='FacultyScience.facultyvalidator')),
                ('ro2_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_r2_validator', to='FacultyScience.facultyvalidator')),
                ('self_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_self_development_total', to='FacultyScience.markfield')),
                ('self_development_trainings', models.ManyToManyField(blank=True, related_name='science_assoc_prof_self_development_trainings', to='FacultyScience.certification')),
                ('senior_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_senior_feedback_marks', to='FacultyScience.markfield')),
                ('student_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_student_feedback_marks', to='FacultyScience.markfield')),
                ('teaching_load', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_teaching_load', to='FacultyScience.teachingload')),
                ('textbooks', models.ManyToManyField(blank=True, related_name='science_assoc_prof_textbook', to='FacultyScience.publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assoc_prof_validator', to='FacultyScience.facultyvalidator')),
            ],
        ),
        migrations.CreateModel(
            name='ScienceAssistantProfOnContractAppraisalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_level', models.CharField(choices=[('APPRAISEE', 'APPRAISEE'), ('RO1', 'Reporting Officer (RO)'), ('RO2', 'Reviewing Officer (RV)')], default='APPRAISEE', max_length=10)),
                ('is_assistant_prof_on_contract', models.BooleanField(default=True)),
                ('year', models.IntegerField(default=2023)),
                ('has_verified_data', models.BooleanField(default=False)),
                ('student_feedback', models.FloatField(blank=True, null=True)),
                ('external_phd_guidance_available', models.BooleanField(default=True)),
                ('faculty_advisor_available', models.BooleanField(default=True)),
                ('industry_collaboration_available', models.BooleanField(default=True)),
                ('arranging_conferences_available', models.BooleanField(default=True)),
                ('being_mentor_available', models.BooleanField(default=True)),
                ('attending_conferences_available', models.BooleanField(default=True)),
                ('community_development_available', models.BooleanField(default=True)),
                ('senior_feedback_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('self_development_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('is_mooc_available', models.BooleanField(default=True)),
                ('additional_responsibilities_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('academia_collaboration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_academia_collaboration', to='FacultyScience.academiacollaboration')),
                ('academia_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_academia_collaboration_total', to='FacultyScience.markfield')),
                ('additional_responsibilities_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_additional_responsibilities_marks', to='FacultyScience.markfield')),
                ('admission_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_admission_duty_total', to='FacultyScience.markfield')),
                ('arranging_conferences', models.ManyToManyField(blank=True, related_name='science_arranging_conferences', to='FacultyScience.genericmarkedparameter')),
                ('arranging_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_arranging_conferences_total', to='FacultyScience.markfield')),
                ('attending_conferences', models.ManyToManyField(blank=True, related_name='science_attending_conferences', to='FacultyScience.genericmarkedparameter')),
                ('attending_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_attending_conferences_total', to='FacultyScience.markfield')),
                ('being_mentor', models.ManyToManyField(blank=True, related_name='science_being_mentor', to='FacultyScience.genericmarkedparameter')),
                ('being_mentor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_being_mentor_total', to='FacultyScience.markfield')),
                ('books_and_publications_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_books_and_publications_marks', to='FacultyScience.markfield')),
                ('community_development', models.ManyToManyField(blank=True, related_name='science_community_development', to='FacultyScience.genericmarkedparameter')),
                ('community_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_community_development_total', to='FacultyScience.markfield')),
                ('conference_proceedings_scopus_wos', models.ManyToManyField(blank=True, related_name='science_conference_proceedings_scopus_wos', to='FacultyScience.paper')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FacultyScience.sciencegoalsheetassistantprofoncontract')),
                ('e_publications_articles', models.ManyToManyField(blank=True, related_name='science_e_publications_articles', to='FacultyScience.paper')),
                ('exam_duty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_exam_duty_total_marks', to='FacultyScience.examduty')),
                ('faculty_advisor', models.ManyToManyField(blank=True, related_name='science_faculty_advisor', to='FacultyScience.facultyadvisor')),
                ('faculty_advisor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_faculty_advisor_total', to='FacultyScience.markfield')),
                ('grand_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_grand_total', to='FacultyScience.markfield')),
                ('industry_collaboration', models.ManyToManyField(blank=True, related_name='science_industry_collaboration', to='FacultyScience.collaboration')),
                ('industry_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_industry_collaboration_total', to='FacultyScience.markfield')),
                ('involvement_extra_curricular_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_involvement_extra_curricular_total', to='FacultyScience.markfield')),
                ('modern_teaching_methods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_modern_teaching_methods', to='FacultyScience.modernmethods')),
                ('mooc_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_mooc_course', to='FacultyScience.certification')),
                ('mooc_courses_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_mooc_courses_total', to='FacultyScience.markfield')),
                ('part_a_section_1_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_a_section_1_total', to='FacultyScience.markfield')),
                ('part_a_section_2_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_a_section_2_total', to='FacultyScience.markfield')),
                ('part_a_section_2a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_a_section_2a_total', to='FacultyScience.markfield')),
                ('part_a_section_3_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_a_section_3_total', to='FacultyScience.markfield')),
                ('part_a_section_4_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_a_section_4_total', to='FacultyScience.markfield')),
                ('part_a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_a_total', to='FacultyScience.markfield')),
                ('part_b_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_part_b_total', to='FacultyScience.markfield')),
                ('patents', models.ManyToManyField(blank=True, related_name='science_patents', to='FacultyScience.patent')),
                ('patents_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_patents_total', to='FacultyScience.markfield')),
                ('phd_guidance', models.ManyToManyField(blank=True, related_name='science_phd_guidance', to='FacultyScience.phdguidance')),
                ('phd_guidance_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_phd_guidance_total', to='FacultyScience.markfield')),
                ('placement_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_placement_duty_total', to='FacultyScience.markfield')),
                ('projects', models.ManyToManyField(blank=True, related_name='science_projects', to='FacultyScience.project')),
                ('projects_total_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_projects_total_marks', to='FacultyScience.markfield')),
                ('providing_consultancy', models.ManyToManyField(blank=True, related_name='science_providing_consultancy', to='FacultyScience.consultancy')),
                ('providing_consultancy_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_providing_consultancy_total', to='FacultyScience.markfield')),
                ('publications_in_scopus_wos', models.ManyToManyField(blank=True, related_name='science_publications_in_scopus_wos', to='FacultyScience.paper')),
                ('recognition_awards', models.ManyToManyField(blank=True, related_name='science_recognition_awards', to='FacultyScience.award')),
                ('recognition_awards_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_recognition_awards_total', to='FacultyScience.markfield')),
                ('research_books', models.ManyToManyField(blank=True, related_name='science_research_books', to='FacultyScience.publication')),
                ('ro1_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assistant_prof_on_contract_r1_validator', to='FacultyScience.facultyvalidator')),
                ('ro2_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assistant_prof_on_contract_r2_validator', to='FacultyScience.facultyvalidator')),
                ('self_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_self_development_total', to='FacultyScience.markfield')),
                ('self_development_trainings', models.ManyToManyField(blank=True, related_name='science_self_development_trainings', to='FacultyScience.certification')),
                ('senior_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_senior_feedback_marks', to='FacultyScience.markfield')),
                ('student_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_student_feedback_marks', to='FacultyScience.markfield')),
                ('teaching_load', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_teaching_load', to='FacultyScience.teachingload')),
                ('textbooks', models.ManyToManyField(blank=True, related_name='science_textbook', to='FacultyScience.publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_assistant_prof_on_contract_validator', to='FacultyScience.facultyvalidator')),
            ],
            options={
                'verbose_name': 'FoET Assistant Professor On Contract Appraisal File',
                'verbose_name_plural': 'FoET Assistant Professor On Contract Appraisal Files',
            },
        ),
        migrations.CreateModel(
            name='ScienceAssistantProfAppraisalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_level', models.CharField(choices=[('APPRAISEE', 'APPRAISEE'), ('RO1', 'Reporting Officer (RO)'), ('RO2', 'Reviewing Officer (RV)')], default='APPRAISEE', max_length=10)),
                ('year', models.IntegerField(default=2023)),
                ('has_verified_data', models.BooleanField(default=False)),
                ('student_feedback', models.FloatField(blank=True, null=True)),
                ('external_phd_guidance_available', models.BooleanField(default=True)),
                ('arranging_conferences_available', models.BooleanField(default=True)),
                ('being_mentor_available', models.BooleanField(default=True)),
                ('attending_conferences_available', models.BooleanField(default=True)),
                ('community_development_available', models.BooleanField(default=True)),
                ('senior_feedback_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('self_development_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('is_mooc_available', models.BooleanField(default=True)),
                ('additional_responsibilities_grade', models.CharField(blank=True, choices=[('O', 'Outstanding'), ('G', 'Good'), ('A', 'Average'), ('U', 'Unsatisfactory')], max_length=1, null=True)),
                ('academia_collaboration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_academia_collaboration', to='FacultyScience.academiacollaboration')),
                ('academia_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_academia_collaboration_total', to='FacultyScience.markfield')),
                ('additional_responsibilities_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_additional_responsibilities_marks', to='FacultyScience.markfield')),
                ('admission_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_admission_duty_total', to='FacultyScience.markfield')),
                ('arranging_conferences', models.ManyToManyField(blank=True, related_name='science_asst_prof_arranging_conferences', to='FacultyScience.genericmarkedparameter')),
                ('arranging_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_arranging_conferences_total', to='FacultyScience.markfield')),
                ('attending_conferences', models.ManyToManyField(blank=True, related_name='science_asst_prof_attending_conferences', to='FacultyScience.genericmarkedparameter')),
                ('attending_conferences_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_attending_conferences_total', to='FacultyScience.markfield')),
                ('being_mentor', models.ManyToManyField(blank=True, related_name='science_asst_prof_being_mentor', to='FacultyScience.genericmarkedparameter')),
                ('being_mentor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_being_mentor_total', to='FacultyScience.markfield')),
                ('books_and_publications_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_books_and_publications_marks', to='FacultyScience.markfield')),
                ('community_development', models.ManyToManyField(blank=True, related_name='science_asst_prof_community_development', to='FacultyScience.genericmarkedparameter')),
                ('community_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_community_development_total', to='FacultyScience.markfield')),
                ('conference_proceedings_scopus_wos', models.ManyToManyField(blank=True, related_name='science_asst_prof_conference_proceedings_scopus_wos', to='FacultyScience.paper')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FacultyScience.sciencegoalsheetassistantprof')),
                ('e_publications_articles', models.ManyToManyField(blank=True, related_name='science_asst_prof_e_publications_articles', to='FacultyScience.paper')),
                ('exam_duty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_exam_duty_total_marks', to='FacultyScience.examduty')),
                ('faculty_advisor', models.ManyToManyField(blank=True, related_name='science_asst_prof_faculty_advisor', to='FacultyScience.facultyadvisor')),
                ('faculty_advisor_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_faculty_advisor_total', to='FacultyScience.markfield')),
                ('grand_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_grand_total', to='FacultyScience.markfield')),
                ('industry_collaboration', models.ManyToManyField(blank=True, related_name='science_asst_prof_industry_collaboration', to='FacultyScience.collaboration')),
                ('industry_collaboration_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_industry_collaboration_total', to='FacultyScience.markfield')),
                ('involvement_extra_curricular_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_involvement_extra_curricular_total', to='FacultyScience.markfield')),
                ('modern_teaching_methods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_modern_teaching_methods', to='FacultyScience.modernmethods')),
                ('mooc_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_mooc_course', to='FacultyScience.certification')),
                ('mooc_courses_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_mooc_courses_total', to='FacultyScience.markfield')),
                ('part_a_section_1_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_a_section_1_total', to='FacultyScience.markfield')),
                ('part_a_section_2_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_a_section_2_total', to='FacultyScience.markfield')),
                ('part_a_section_2a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_a_section_2a_total', to='FacultyScience.markfield')),
                ('part_a_section_3_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_a_section_3_total', to='FacultyScience.markfield')),
                ('part_a_section_4_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_a_section_4_total', to='FacultyScience.markfield')),
                ('part_a_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_a_total', to='FacultyScience.markfield')),
                ('part_b_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_part_b_total', to='FacultyScience.markfield')),
                ('patents', models.ManyToManyField(blank=True, related_name='science_asst_prof_patents', to='FacultyScience.patent')),
                ('patents_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_patents_total', to='FacultyScience.markfield')),
                ('phd_guidance', models.ManyToManyField(blank=True, related_name='science_asst_prof_phd_guidance', to='FacultyScience.phdguidance')),
                ('phd_guidance_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_phd_guidance_total', to='FacultyScience.markfield')),
                ('placement_duty_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_placement_duty_total', to='FacultyScience.markfield')),
                ('projects', models.ManyToManyField(blank=True, related_name='science_asst_prof_projects', to='FacultyScience.project')),
                ('projects_total_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_projects_total_marks', to='FacultyScience.markfield')),
                ('providing_consultancy', models.ManyToManyField(blank=True, related_name='science_asst_prof_providing_consultancy', to='FacultyScience.consultancy')),
                ('providing_consultancy_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_providing_consultancy_total', to='FacultyScience.markfield')),
                ('publications_in_scopus_wos', models.ManyToManyField(blank=True, related_name='science_asst_prof_publications_in_scopus_wos', to='FacultyScience.paper')),
                ('recognition_awards', models.ManyToManyField(blank=True, related_name='science_asst_prof_recognition_awards', to='FacultyScience.award')),
                ('recognition_awards_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_recognition_awards_total', to='FacultyScience.markfield')),
                ('research_books', models.ManyToManyField(blank=True, related_name='science_asst_prof_research_books', to='FacultyScience.publication')),
                ('ro1_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_r1_validator', to='FacultyScience.facultyvalidator')),
                ('ro2_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_r2_validator', to='FacultyScience.facultyvalidator')),
                ('self_development_total', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_self_development_total', to='FacultyScience.markfield')),
                ('self_development_trainings', models.ManyToManyField(blank=True, related_name='science_asst_prof_self_development_trainings', to='FacultyScience.certification')),
                ('senior_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_senior_feedback_marks', to='FacultyScience.markfield')),
                ('student_feedback_marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_student_feedback_marks', to='FacultyScience.markfield')),
                ('teaching_load', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_teaching_load', to='FacultyScience.teachingload')),
                ('textbooks', models.ManyToManyField(blank=True, related_name='science_asst_prof_textbook', to='FacultyScience.publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_asst_prof_validator', to='FacultyScience.facultyvalidator')),
            ],
        ),
        migrations.CreateModel(
            name='MastersDissertation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2023)),
                ('month', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('student_name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, choices=[('submitted', 'Submitted'), ('submitted_patent_published', 'Submitted and Patent Published / Granted'), ('submitted_patent_papers_published', 'Submitted and Patent Granted/Published Papers Published')], max_length=100, null=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_mtech_faculty', to=settings.AUTH_USER_MODEL)),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_mtech', to='FacultyScience.markfield')),
            ],
        ),
        migrations.AddField(
            model_name='genericmarkedparameter',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_generic_marked_parameter', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='facultyadvisor',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_faculty_advisor', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='examduty',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_exam_duty', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='consultancy',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_consultancy', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='collaboration',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_collaboration', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='certification',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_certification', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='certification',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_certification_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='award',
            name='marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_award', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='academiacollaboration',
            name='contribution_marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sls_contrib_marks_academia_collaboration', to='FacultyScience.markfield'),
        ),
        migrations.AddField(
            model_name='academiacollaboration',
            name='mou_marks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='science_academia_collaboration_mou', to='FacultyScience.markfield'),
        ),
    ]
